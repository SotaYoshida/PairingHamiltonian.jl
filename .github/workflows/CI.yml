name: CI
on:
  push:
    branches:
      - dev
      - develop
    tags: '*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - {version: '1.11',   os: ubuntu-latest,  payload: serial}
          - {version: '1.11',   os: macOS-latest,   payload: serial}
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: x64
      - uses: julia-actions/cache@v3
      - uses: julia-actions/julia-buildpkg@v1
      - name: "Run tests"
        run: |
            julia --project -e 'import Pkg; Pkg.test()'

  build2:    
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
      matrix:
        include:
          - {version: '1.11',   os: 'ubuntu-latest'}
    name: Run sample_script.jl
    steps:     
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: x64
      - uses: julia-actions/cache@v3
      - uses: julia-actions/julia-buildpkg@v1 
      - run: | 
          git_hash=$(git rev-parse --short "$GITHUB_SHA")          
          julia --project="@." -t 4 ./example/sample_script.jl
          julia --project="@." -t 4 ./example/eigenvector_continuation_example.jl 
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1.11'
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
      - run: |
          julia --project=docs -e '
            using Documenter: DocMeta, doctest
            using PairingHamiltonian
            DocMeta.setdocmeta!(PairingHamiltonian, :DocTestSetup, :(using PairingHamiltonian); recursive=true)
            doctest(PairingHamiltonian)'



